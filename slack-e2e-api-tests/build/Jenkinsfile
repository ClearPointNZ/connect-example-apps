node("k8s-dind-worker") {

  environment {
      DOCKER_HOST = 'tcp://localhost:2375'
  }

  stage('Clone repository') {
    checkout([
      $class: 'GitSCM',
      branches: [[name: '*/master']],
      doGenerateSubmoduleConfigurations: false,
      extensions: [],
      submoduleCfg: [],
      userRemoteConfigs: [[
        credentialsId: 'jenkins-clearpoint',
        url: 'git@github.com:ClearPointNZ/connect-sample-apps.git'
      ]]
    ])
  }

  stage('Configure env yaml file') {
    sh '''
      cd slack-e2e-api-tests;
      cp src/test/resources/env.yml.example src/test/resources/env.yml;
    '''
  }


  stage('Build and push artifact') {
    withCredentials([[
        $class          : 'UsernamePasswordMultiBinding',
        credentialsId   : 'nexus-credentials',
        usernameVariable: 'NEXUS_USR',
        passwordVariable: 'NEXUS_PSW'
    ]]) {
        sh 'printenv'
        docker.withServer('tcp://localhost:2375') {
            docker.image('ikhripunov/connect-maven:latest').withRun('-v "$PWD":/usr/src/mymaven -w /usr/src/mymaven') {
                docker.image('ikhripunov/connect-maven:latest').inside() {
                    sh 'printenv'
                    sh 'cp /usr/share/maven/ref/settings.xml ~/.m2/settings.xml'
                    sh 'mvn clean deploy'
                }
            }
        }
    }
  }

  stage('Build image') {
    sh '''
      echo 'build image if not already buit by Maven plugin'
    '''
  }

  stage('Test image') {
    app.withRun {
      echo 'This is a test!'
    }
  }
}
